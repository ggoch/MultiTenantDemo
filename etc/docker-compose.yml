version: '3.7'

services:
  sql-server:
    container_name: sql-server
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1434:1433"
    environment:
      SA_PASSWORD: "myPassw0rd"
      ACCEPT_EULA: "Y"
    volumes:
      - sqldata:/var/opt/mssql
    networks:
      - abp-network  
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S sql-server -U sa -P "myPassw0rd" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  # postgresql:
  #   image: postgres:15.1
  #   container_name: postgresql
  #   environment:
  #     POSTGRES_USER: strapi
  #     POSTGRES_PASSWORD: strapi
  #     POSTGRES_DB: strapi
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgresqldata:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "strapi", "-d", "strapi"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5 
  #   networks:
  #     - abp-network
  
  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - abp-network  
    healthcheck:
      test: ["CMD", "redis-cli","ping"]

volumes:
  sqldata:
    name: demo_sqldata
  postgresqldata:
    name: demo_postgresqldata
networks:
  abp-network:
    name: demo-network
    driver: bridge
